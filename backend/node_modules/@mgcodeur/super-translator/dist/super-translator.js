import m from "https";
class n {
  static async translate({ from: t = "auto", to: e = "en", text: r }) {
    const a = await n.requestTranslation(t, e, r);
    return n.getSentenceFromJSON(a);
  }
  static async requestTranslation(t, e, r) {
    if (r.length > 5e3)
      throw new Error("Maximum number of characters exceeded: 5000");
    const a = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${encodeURI(t)}&tl=${encodeURI(e)}&dt=t&q=${encodeURI(r)}`, u = await new Promise((i, d) => {
      m.get(a, (o) => {
        let c = "";
        o.on("data", (s) => c += s), o.on("end", () => i(c)), o.on("error", (s) => d(s));
      });
    });
    return JSON.parse(u);
  }
  static getSentenceFromJSON(t) {
    let e = "";
    if (!t || !t[0])
      throw new Error("Google detected unusual traffic from your computer network, try again later (2 - 48 hours)");
    for (const r of t[0])
      e += r[0] || "";
    return e;
  }
}
const g = ({ from: l = "auto", to: t = "en", text: e }) => n.translate({ from: l, to: t, text: e });
export {
  g as default
};
